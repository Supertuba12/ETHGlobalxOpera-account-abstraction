/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { SimpleWallet, SimpleWalletInterface } from "../SimpleWallet";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract EntryPoint",
        name: "anEntryPoint",
        type: "address",
      },
      {
        internalType: "address",
        name: "anOwner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "oldEntryPoint",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newEntryPoint",
        type: "address",
      },
    ],
    name: "EntryPointChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "addDeposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract EntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dest",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "func",
        type: "bytes",
      },
    ],
    name: "exec",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "dest",
        type: "address[]",
      },
      {
        internalType: "bytes[]",
        name: "func",
        type: "bytes[]",
      },
    ],
    name: "execBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "dest",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "func",
        type: "bytes",
      },
    ],
    name: "execFromEntryPoint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "dest",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newEntryPoint",
        type: "address",
      },
    ],
    name: "updateEntryPoint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "paymaster",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "paymasterData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "missingWalletFunds",
        type: "uint256",
      },
    ],
    name: "validateUserOp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawDepositTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161109638038061109683398101604081905261002f9161008f565b600180546001600160a01b039384166001600160a01b031990911617905560008054919092166c01000000000000000000000000026001600160601b039091161790556100c9565b6001600160a01b038116811461008c57600080fd5b50565b600080604083850312156100a257600080fd5b82516100ad81610077565b60208401519092506100be81610077565b809150509250929050565b610fbe806100d86000396000f3fe6080604052600436106100ab5760003560e01c8063a9059cbb11610064578063a9059cbb14610185578063affed0e0146101a5578063b0d691fe146101cd578063c399ec88146101eb578063d0cb75fa14610200578063fcbac1f41461022057600080fd5b80630565bb67146100b75780631b71bb6e146100d95780634a58db19146100f95780634d44560d1461010157806380c5c7d0146101215780638da5cb5b1461014157600080fd5b366100b257005b600080fd5b3480156100c357600080fd5b506100d76100d2366004610c8b565b610240565b005b3480156100e557600080fd5b506100d76100f4366004610d14565b61028f565b6100d76102a3565b34801561010d57600080fd5b506100d761011c366004610d38565b610314565b34801561012d57600080fd5b506100d761013c366004610c8b565b610390565b34801561014d57600080fd5b5060005461016890600160601b90046001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561019157600080fd5b506100d76101a0366004610d38565b610398565b3480156101b157600080fd5b506000546001600160601b03165b60405190815260200161017c565b3480156101d957600080fd5b506001546001600160a01b0316610168565b3480156101f757600080fd5b506101bf6103db565b34801561020c57600080fd5b506100d761021b366004610da9565b61045e565b34801561022c57600080fd5b506100d761023b366004610e15565b61055e565b610248610597565b610289848484848080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506105f192505050565b50505050565b610297610661565b6102a081610669565b50565b60006102b76001546001600160a01b031690565b6001600160a01b03163460405160006040518083038185875af1925050503d8060008114610301576040519150601f19603f3d011682016040523d82523d6000602084013e610306565b606091505b50509050806102a057600080fd5b61031c610597565b6001546001600160a01b031660405163040b850f60e31b81526001600160a01b03848116600483015260248201849052919091169063205c287890604401600060405180830381600087803b15801561037457600080fd5b505af1158015610388573d6000803e3d6000fd5b505050505050565b6102486106c5565b6103a0610597565b6040516001600160a01b0383169082156108fc029083906000818181858888f193505050501580156103d6573d6000803e3d6000fd5b505050565b60006103ef6001546001600160a01b031690565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa158015610435573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104599190610e69565b905090565b610466610597565b8281146104b05760405162461bcd60e51b815260206004820152601360248201527277726f6e67206172726179206c656e6774687360681b60448201526064015b60405180910390fd5b60005b83811015610557576105458585838181106104d0576104d0610e82565b90506020020160208101906104e59190610d14565b60008585858181106104f9576104f9610e82565b905060200281019061050b9190610e98565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506105f192505050565b8061054f81610ef5565b9150506104b3565b5050505050565b6105666106c5565b610570838361071f565b61057d6040840184610e98565b1515905061058e5761058e8361082c565b6103d6816108be565b600054600160601b90046001600160a01b03163314806105b657503330145b6105ef5760405162461bcd60e51b815260206004820152600a60248201526937b7363c9037bbb732b960b11b60448201526064016104a7565b565b600080846001600160a01b0316848460405161060d9190610f10565b60006040518083038185875af1925050503d806000811461064a576040519150601f19603f3d011682016040523d82523d6000602084013e61064f565b606091505b50915091508161055757805160208201fd5b6105ef610597565b6001546040516001600160a01b038084169216907f450909c1478d09248269d4ad4fa8cba61ca3f50faed58c7aedefa51c7f62b83a90600090a3600180546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b031633146105ef5760405162461bcd60e51b815260206004820152601b60248201527f77616c6c65743a206e6f742066726f6d20456e747279506f696e74000000000060448201526064016104a7565b6000610778826040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b90506107c861078b610160850185610e98565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250859392505061090b9050565b600054600160601b90046001600160a01b039081169116146103d65760405162461bcd60e51b815260206004820152601760248201527f77616c6c65743a2077726f6e67207369676e617475726500000000000000000060448201526064016104a7565b600080546020830135916001600160601b03909116908061084c83610f4b565b91906101000a8154816001600160601b0302191690836001600160601b031602179055506001600160601b0316146102a05760405162461bcd60e51b815260206004820152601560248201527477616c6c65743a20696e76616c6964206e6f6e636560581b60448201526064016104a7565b80156102a057604051600090339060001990849084818181858888f193505050503d8060008114610557576040519150601f19603f3d011682016040523d82523d6000602084013e610557565b600080600061091a858561092f565b915091506109278161099f565b509392505050565b6000808251604114156109665760208301516040840151606085015160001a61095a87828585610b5a565b94509450505050610998565b8251604014156109905760208301516040840151610985868383610c47565b935093505050610998565b506000905060025b9250929050565b60008160048111156109b3576109b3610f72565b14156109bc5750565b60018160048111156109d0576109d0610f72565b1415610a1e5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016104a7565b6002816004811115610a3257610a32610f72565b1415610a805760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016104a7565b6003816004811115610a9457610a94610f72565b1415610aed5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016104a7565b6004816004811115610b0157610b01610f72565b14156102a05760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016104a7565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115610b915750600090506003610c3e565b8460ff16601b14158015610ba957508460ff16601c14155b15610bba5750600090506004610c3e565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610c0e573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610c3757600060019250925050610c3e565b9150600090505b94509492505050565b6000806001600160ff1b03831660ff84901c601b01610c6887828885610b5a565b935093505050935093915050565b6001600160a01b03811681146102a057600080fd5b60008060008060608587031215610ca157600080fd5b8435610cac81610c76565b935060208501359250604085013567ffffffffffffffff80821115610cd057600080fd5b818701915087601f830112610ce457600080fd5b813581811115610cf357600080fd5b886020828501011115610d0557600080fd5b95989497505060200194505050565b600060208284031215610d2657600080fd5b8135610d3181610c76565b9392505050565b60008060408385031215610d4b57600080fd5b8235610d5681610c76565b946020939093013593505050565b60008083601f840112610d7657600080fd5b50813567ffffffffffffffff811115610d8e57600080fd5b6020830191508360208260051b850101111561099857600080fd5b60008060008060408587031215610dbf57600080fd5b843567ffffffffffffffff80821115610dd757600080fd5b610de388838901610d64565b90965094506020870135915080821115610dfc57600080fd5b50610e0987828801610d64565b95989497509550505050565b600080600060608486031215610e2a57600080fd5b833567ffffffffffffffff811115610e4157600080fd5b84016101808187031215610e5457600080fd5b95602085013595506040909401359392505050565b600060208284031215610e7b57600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b6000808335601e19843603018112610eaf57600080fd5b83018035915067ffffffffffffffff821115610eca57600080fd5b60200191503681900382131561099857600080fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415610f0957610f09610edf565b5060010190565b6000825160005b81811015610f315760208186018101518583015201610f17565b81811115610f40576000828501525b509190910192915050565b60006001600160601b0380831681811415610f6857610f68610edf565b6001019392505050565b634e487b7160e01b600052602160045260246000fdfea264697066735822122032a1247eda0ea1852e82bb4d78ab3401242774a528a931eee4d383a7877398be64736f6c634300080c0033";

export class SimpleWallet__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    anEntryPoint: string,
    anOwner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SimpleWallet> {
    return super.deploy(
      anEntryPoint,
      anOwner,
      overrides || {}
    ) as Promise<SimpleWallet>;
  }
  getDeployTransaction(
    anEntryPoint: string,
    anOwner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(anEntryPoint, anOwner, overrides || {});
  }
  attach(address: string): SimpleWallet {
    return super.attach(address) as SimpleWallet;
  }
  connect(signer: Signer): SimpleWallet__factory {
    return super.connect(signer) as SimpleWallet__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleWalletInterface {
    return new utils.Interface(_abi) as SimpleWalletInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SimpleWallet {
    return new Contract(address, _abi, signerOrProvider) as SimpleWallet;
  }
}
