/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TestPaymasterAcceptAll,
  TestPaymasterAcceptAllInterface,
} from "../TestPaymasterAcceptAll";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract EntryPoint",
        name: "_entryPoint",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "extraUnstakeDelaySec",
        type: "uint32",
      },
    ],
    name: "addStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract EntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPaymaster.PostOpMode",
        name: "mode",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
    ],
    name: "postOp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract EntryPoint",
        name: "_entryPoint",
        type: "address",
      },
    ],
    name: "setEntryPoint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "paymaster",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "paymasterData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "maxCost",
        type: "uint256",
      },
    ],
    name: "validatePaymasterUserOp",
    outputs: [
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
    ],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610b96380380610b9683398101604081905261002f91610119565b8061003933610049565b61004281610099565b5050610149565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000546001600160a01b031633146100f75760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640160405180910390fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b60006020828403121561012b57600080fd5b81516001600160a01b038116811461014257600080fd5b9392505050565b610a3e806101586000396000f3fe6080604052600436106100c25760003560e01c8063a9a234091161007f578063c23a5cea11610059578063c23a5cea146101ff578063c399ec881461021f578063d0e30db014610242578063f2fde38b1461024a57600080fd5b8063a9a23409146101aa578063b0d691fe146101ca578063bb9fe6bf146101ea57600080fd5b80630396cb60146100c7578063205c2878146100dc578063584465f2146100fc578063715018a61461011c5780637bfd0845146101315780638da5cb5b14610178575b600080fd5b6100da6100d53660046107ad565b61026a565b005b3480156100e857600080fd5b506100da6100f73660046107e6565b61037b565b34801561010857600080fd5b506100da610117366004610812565b6103f3565b34801561012857600080fd5b506100da61043f565b34801561013d57600080fd5b5061016261014c36600461082f565b6040805160208101909152600081529392505050565b60405161016f9190610883565b60405180910390f35b34801561018457600080fd5b506000546001600160a01b03165b6040516001600160a01b03909116815260200161016f565b3480156101b657600080fd5b506100da6101c53660046108d8565b610475565b3480156101d657600080fd5b50600154610192906001600160a01b031681565b3480156101f657600080fd5b506100da61048f565b34801561020b57600080fd5b506100da61021a366004610812565b61051d565b34801561022b57600080fd5b506102346105a9565b60405190815260200161016f565b6100da61061b565b34801561025657600080fd5b506100da610265366004610812565b610661565b6000546001600160a01b0316331461029d5760405162461bcd60e51b815260040161029490610967565b60405180910390fd5b60015460408051630721732f60e31b815290516001600160a01b0390921691630396cb609134918591859163390b9978916004808201926020929091908290030181865afa1580156102f3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610317919061099c565b61032191906109b9565b6040516001600160e01b031960e085901b16815263ffffffff9190911660048201526024016000604051808303818588803b15801561035f57600080fd5b505af1158015610373573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103a55760405162461bcd60e51b815260040161029490610967565b60015460405163040b850f60e31b81526001600160a01b038481166004830152602482018490529091169063205c287890604401600060405180830381600087803b15801561035f57600080fd5b6000546001600160a01b0316331461041d5760405162461bcd60e51b815260040161029490610967565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146104695760405162461bcd60e51b815260040161029490610967565b61047360006106fc565b565b61047d61074c565b61048984848484610763565b50505050565b6000546001600160a01b031633146104b95760405162461bcd60e51b815260040161029490610967565b600160009054906101000a90046001600160a01b03166001600160a01b031663bb9fe6bf6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561050957600080fd5b505af1158015610489573d6000803e3d6000fd5b6000546001600160a01b031633146105475760405162461bcd60e51b815260040161029490610967565b60015460405163611d2e7560e11b81526001600160a01b0383811660048301529091169063c23a5cea90602401600060405180830381600087803b15801561058e57600080fd5b505af11580156105a2573d6000803e3d6000fd5b5050505050565b6001546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156105f2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061691906109ef565b905090565b60015460405163b760faf960e01b81523060048201526001600160a01b039091169063b760faf99034906024016000604051808303818588803b15801561058e57600080fd5b6000546001600160a01b0316331461068b5760405162461bcd60e51b815260040161029490610967565b6001600160a01b0381166106f05760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610294565b6106f9816106fc565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001546001600160a01b0316331461047357600080fd5b60405162461bcd60e51b815260206004820152600d60248201526c6d757374206f7665727269646560981b6044820152606401610294565b63ffffffff811681146106f957600080fd5b6000602082840312156107bf57600080fd5b81356107ca8161079b565b9392505050565b6001600160a01b03811681146106f957600080fd5b600080604083850312156107f957600080fd5b8235610804816107d1565b946020939093013593505050565b60006020828403121561082457600080fd5b81356107ca816107d1565b60008060006060848603121561084457600080fd5b833567ffffffffffffffff81111561085b57600080fd5b8401610180818703121561086e57600080fd5b95602085013595506040909401359392505050565b600060208083528351808285015260005b818110156108b057858101830151858201604001528201610894565b818111156108c2576000604083870101525b50601f01601f1916929092016040019392505050565b600080600080606085870312156108ee57600080fd5b8435600381106108fd57600080fd5b9350602085013567ffffffffffffffff8082111561091a57600080fd5b818701915087601f83011261092e57600080fd5b81358181111561093d57600080fd5b88602082850101111561094f57600080fd5b95986020929092019750949560400135945092505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000602082840312156109ae57600080fd5b81516107ca8161079b565b600063ffffffff8083168185168083038211156109e657634e487b7160e01b600052601160045260246000fd5b01949350505050565b600060208284031215610a0157600080fd5b505191905056fea264697066735822122022554e9833b65d30b3c4911e55ccd4c385a41cec66c64a2eb1ae4db13218c3df64736f6c634300080c0033";

export class TestPaymasterAcceptAll__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _entryPoint: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestPaymasterAcceptAll> {
    return super.deploy(
      _entryPoint,
      overrides || {}
    ) as Promise<TestPaymasterAcceptAll>;
  }
  getDeployTransaction(
    _entryPoint: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_entryPoint, overrides || {});
  }
  attach(address: string): TestPaymasterAcceptAll {
    return super.attach(address) as TestPaymasterAcceptAll;
  }
  connect(signer: Signer): TestPaymasterAcceptAll__factory {
    return super.connect(signer) as TestPaymasterAcceptAll__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestPaymasterAcceptAllInterface {
    return new utils.Interface(_abi) as TestPaymasterAcceptAllInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestPaymasterAcceptAll {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TestPaymasterAcceptAll;
  }
}
